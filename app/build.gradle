plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'com.google.dagger.hilt.android'
    id 'com.google.devtools.ksp' version '1.9.21-1.0.15'
    id 'io.gitlab.arturbosch.detekt'
    id 'kotlinx-serialization'
    //id 'com.google.gms.google-services'
    //id 'com.google.firebase.crashlytics'
}

android {
    namespace 'at.alysis.demoapplication'
    compileSdk 34

    defaultConfig {
        applicationId "at.alysis.demoapplication"
        minSdk 30
        targetSdk 34
        versionCode 12
        versionName "1.0.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }

        ksp {
            arg("room.schemaLocation", "$projectDir/schemas")
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
        }

        debug {
            testCoverageEnabled = true
        }
    }

    ndkVersion "27.2.12479018" // for jenkins
    flavorDimensions "version"


    sourceSets {
        main {
            jniLibs.srcDirs += ['src/main/jniLibs']
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
    }
    buildFeatures {
        compose true
        buildConfig true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.5.6'
    }
    packagingOptions {

        pickFirst 'lib/x86/libc++_shared.so'
        pickFirst 'lib/x86_64/libc++_shared.so'
        pickFirst 'lib/armeabi-v7a/libc++_shared.so'
        pickFirst 'lib/arm64-v8a/libc++_shared.so'

        jniLibs {
            // required to load qt plugins because qt cannot find uncompressed shared libs in apk
            useLegacyPackaging = true
        }

        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }

    namespace 'at.alysis.demoapplication'

    externalNativeBuild {
        cmake {
            path "src/main/cpp/CMakeLists.txt"
        }
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.13.1'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.8.4'
    implementation 'androidx.activity:activity-compose:1.9.1'
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_version"
    implementation 'androidx.compose.material3:material3:1.3.1'
    implementation 'androidx.core:core-ktx:1.13.1'
    implementation 'androidx.lifecycle:lifecycle-service:2.8.4'
    implementation 'androidx.compose.runtime:runtime-livedata:1.6.8'
    implementation 'androidx.lifecycle:lifecycle-runtime-compose:2.8.4'
    implementation 'com.google.android.material:material:1.12.0'

    // Clarius Cast API
    var clarius_version = "v12-0-2"
    implementation fileTree(dir: "../../../libs/$clarius_version", include: 'cast-debug.aar')
    implementation fileTree(dir: "libs/$clarius_version", include: 'cast-debug.aar')

    // Testing
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.2.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.6.1'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
    androidTestImplementation "com.google.truth:truth:1.1.2"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.6.4"
    testImplementation "org.mockito.kotlin:mockito-kotlin:4.1.0"
    testImplementation "io.mockk:mockk:1.13.7"

    debugImplementation "androidx.compose.ui:ui-tooling:$compose_version"
    debugImplementation "androidx.compose.ui:ui-test-manifest:$compose_version"

    // Hilt Dependency Injection
    implementation "com.google.dagger:hilt-android:2.48"
    ksp "com.google.dagger:hilt-compiler:2.48"

    // Extra dagger hilt dependencies for getting viewmodels
    implementation 'androidx.hilt:hilt-navigation-compose:1.2.0'

    // Android Room
    def room_version = "2.6.1"
    implementation "androidx.room:room-runtime:$room_version"
    // To use Kotlin Symbol Processing (KSP)
    ksp "androidx.room:room-compiler:$room_version"
    implementation("androidx.room:room-ktx:$room_version")

    // Test helpers
    testImplementation "androidx.room:room-testing:$room_version"

    // Navigation
    implementation "androidx.navigation:navigation-compose:2.7.7"

}

